Given a string s and a character c, return a new list of integers of the same length as s where for each index i its value is set the closest distance of s[i] to c. You can assume c exists in s.

Constraints

n â‰¤ 100,000 where n is the length of s
Example 1
Input

s = "aabaab"
c = "b"
Output

[2, 1, 0, 1, 1, 0]


Solution:

class Solution:
    def solve(self, s, c):
        INF, L = 10 ** 10, len(s)
        res = [0] * L

        prv = -INF
        for i in range(L):
            if s[i] == c:
                prv = i
            else:
                res[i] = i - prv

        prv = INF
        for i in range(L - 1, -1, -1):
            if s[i] == c:
                prv = i
            else:
                res[i] = min(res[i], prv - i)

        return res
        
        
        
