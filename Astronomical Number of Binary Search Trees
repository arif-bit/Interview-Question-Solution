Given an integer n, return the number of unique binary search trees you can form with integers from [0, n). Mod the result by 10 ** 9 + 7

For example, given n = 3, there's 5 unique trees.

0
 \
  1
   \
    2
0
 \
  2
 /
1
    2
   /
  1
 /
0
  2
 /
0
 \
  1
  1
 / \
0   2
Constraints

n â‰¤ 1000
Example 1
Input
n = 3
Output
5


Solution:

from math import factorial as f
class Solution:
    def solve(self, n):
        return f(2 * n) // (f(n + 1) * f(n))% (10 ** 9 + 7)
        
        
