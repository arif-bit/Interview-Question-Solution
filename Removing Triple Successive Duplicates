Given a string s containing "0"s and "1"s, consider an operation where you pick a character and toggle its value from "0" to "1" or from "1" to "0". Return the minimum number of operations required to obtain a string containing no instances of three identical consecutive characters.

Constraints

n â‰¤ 100,000 where n is the length of s
Example 1
Input

s = "1100011"
Output

1

Solution:

We can always change 000 and 111 to get the optimal solution

Time: O(N)
Space: O(1)

class Solution:
    def solve(self, s):
        return s.count('000') + s.count('111')
        
        
