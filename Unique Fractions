You are given a list of lists fractions where each list contains [numerator, denominator] which represents the number numerator / denominator.

Return a new list of lists such that the numbers in fractions are:

In their most reduced terms. E.g. 8 / 6 becomes 4 / 3.
Any duplicate fractions that represent the same value are removed.
Sorted in ascending order by their value.
If the number is negative, the - sign should go to the numerator (the input also follows this).
Example 1
Input

fractions = [
    [8, 4],
    [2, 1],
    [7, 3],
    [14, 6],
    [10, 2],
    [-3, 6]
]
Output

[
    [-1, 2],
    [2, 1],
    [7, 3],
    [5, 1]
]

Solution:

from fractions import Fraction
class Solution:
    def solve(self, fractions):
        sfracs = sorted({Fraction(n,d) for n, d in fractions})
        return [[f.numerator, f.denominator] for f in sfracs]
        
        
        
