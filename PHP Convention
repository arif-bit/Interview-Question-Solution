You are given an integer n, the number of programmers looking to enter a convention, and a list of integers convention where a 1 represents a programmer and 0 represents empty space.

Given that no two programmers can sit next to each other, return whether all n programmers can enter the convention.

Example 1
Input

n = 2
convention = [0, 0, 1, 0, 0, 0, 1]
Output

True


Solution:

Time : O(n) where n == len(convention)

Space : O(1)

Explanation :

1.) iterate through each convention and check two conditions :

a. ) convention[i-1] == 0 and

b.) convention[i+1] == 0

2.) if both conditions valid increment the count by 1.

3.) if count >= n, return True else False

class Solution:
    def solve(self, n, convention):
        count = 0
        c = len(convention)
        
        for i in range(c):
        
            if convention[i] == 0:
                if (i == 0 or convention[i - 1] == 0) and (i == c - 1 or convention[i + 1] == 0):
                    convention[i] = 1
                    count += 1
        
                    if count >= n:
                        return True
        
        return count == n
        
