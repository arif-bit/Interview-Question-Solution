Given strings a and b, and an integer k, return whether a can be converted to b by shifting some characters clockwise at most k times.

For example, "c" can be turned into "e" using 2 clockwise shifts.

Example 1
Input

a = "xyz"
b = "zzz"
k = 3
Output

True


Solution:

(ord(c2)-ord(c1))%26 will automatically compute the right shift needed, as long as your language supports negative modulos.
We check if the sum of the necessary shifts are smaller than k.

class Solution:
    def solve(self, a, b, k):
        return k >= sum((ord(c2) - ord(c1)) % 26 for c1, c2 in zip(a, b))
