Given a list of sorted integers nums, return the sum of the absolute differences between every pair of numbers in the list. Note that pairs (i, j) and (j, i) are considered different pairs.

Mod the result by 10 ** 9 + 7.

Constraints

n â‰¤ 100,000 where n is the length of nums.
Example 1
Input
nums = [1, 3, 6]
Output
20
Explanation
Result is abs(1 - 3) + abs(1 - 6) + abs(3 - 1) + abs(3 - 6) + abs(6 - 1) + abs(6 - 3).


Solution:

In the sorted array of numbers so you have a sum of numbers smaller and larger than the value.
You will notice that each number is added a certain number of times. It is added i times for the ith index in the sorted array.
This works because in the abs calculations from the numbers smaller, 
the absolute value that is added is the difference between the larger value and the left elements and vice versa for values larger than it. 
We multiply 2 at the end since (i,j) is difference from (j,i) so we do it twice.

class Solution:
    def solve(self, nums):
        MOD = 10 ** 9 + 7
        N = len(nums)

        ans = 0
        for i, v in enumerate(nums):
            ans += i * v - (N - i - 1) * v

        return ans % MOD *2
        
        
        
